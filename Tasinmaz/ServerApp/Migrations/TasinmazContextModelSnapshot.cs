// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ServerApp.Data;

namespace ServerApp.Migrations
{
    [DbContext(typeof(TasinmazContext))]
    partial class TasinmazContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("ServerApp.Models.Il", b =>
                {
                    b.Property<int>("CityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CityName")
                        .HasColumnType("text");

                    b.Property<int>("CountryID")
                        .HasColumnType("integer");

                    b.Property<string>("PhoneCode")
                        .HasColumnType("text");

                    b.Property<string>("PlateNo")
                        .HasColumnType("text");

                    b.HasKey("CityID");

                    b.ToTable("Il");
                });

            modelBuilder.Entity("ServerApp.Models.Ilce", b =>
                {
                    b.Property<int>("CountyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CityID")
                        .HasColumnType("integer");

                    b.Property<string>("CountyName")
                        .HasColumnType("text");

                    b.HasKey("CountyID");

                    b.HasIndex("CityID");

                    b.ToTable("Ilce");
                });

            modelBuilder.Entity("ServerApp.Models.Kullanici", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<bool>("Rol")
                        .HasColumnType("boolean");

                    b.Property<string>("Soyad")
                        .HasColumnType("text");

                    b.Property<bool>("isActive")
                        .HasColumnType("boolean");

                    b.HasKey("UserID");

                    b.ToTable("Kullanici");
                });

            modelBuilder.Entity("ServerApp.Models.Log", b =>
                {
                    b.Property<int>("logID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ipAdress")
                        .HasColumnType("text");

                    b.Property<string>("logDetails")
                        .HasColumnType("text");

                    b.Property<bool>("logSuccess")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("logTime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("logID");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("ServerApp.Models.Mahalle", b =>
                {
                    b.Property<int>("AreaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AreaName")
                        .HasColumnType("text");

                    b.Property<int>("CountyID")
                        .HasColumnType("integer");

                    b.HasKey("AreaID");

                    b.HasIndex("CountyID");

                    b.ToTable("Mahalle");
                });

            modelBuilder.Entity("ServerApp.Models.Tasinmaz", b =>
                {
                    b.Property<int>("TasinmazID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Ada")
                        .HasColumnType("integer");

                    b.Property<string>("Adres")
                        .HasColumnType("text");

                    b.Property<int>("CityID")
                        .HasColumnType("integer");

                    b.Property<int>("CountyID")
                        .HasColumnType("integer");

                    b.Property<int>("MahalleID")
                        .HasColumnType("integer");

                    b.Property<string>("Nitelik")
                        .HasColumnType("text");

                    b.Property<int>("Parsel")
                        .HasColumnType("integer");

                    b.Property<bool>("isActive")
                        .HasColumnType("boolean");

                    b.HasKey("TasinmazID");

                    b.HasIndex("MahalleID");

                    b.ToTable("Tasinmaz");
                });

            modelBuilder.Entity("ServerApp.Models.Ilce", b =>
                {
                    b.HasOne("ServerApp.Models.Il", "Il")
                        .WithMany()
                        .HasForeignKey("CityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Il");
                });

            modelBuilder.Entity("ServerApp.Models.Mahalle", b =>
                {
                    b.HasOne("ServerApp.Models.Ilce", "Ilce")
                        .WithMany()
                        .HasForeignKey("CountyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ilce");
                });

            modelBuilder.Entity("ServerApp.Models.Tasinmaz", b =>
                {
                    b.HasOne("ServerApp.Models.Mahalle", "Mahalle")
                        .WithMany()
                        .HasForeignKey("MahalleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mahalle");
                });
#pragma warning restore 612, 618
        }
    }
}
